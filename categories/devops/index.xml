<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Rex&#39;s Notes 技術筆記 </title>
    <link>https://tsunejui.github.io/categories/devops/</link>
    <description>Recent content in Devops on Rex&#39;s Notes 技術筆記 </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Nov 2023 00:13:03 +0800</lastBuildDate><atom:link href="https://tsunejui.github.io/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dex Expiration Time on Openshift Gitops</title>
      <link>https://tsunejui.github.io/posts/openshift-gitops-dex-expiration-time/</link>
      <pubDate>Thu, 02 Nov 2023 00:13:03 +0800</pubDate>
      
      <guid>https://tsunejui.github.io/posts/openshift-gitops-dex-expiration-time/</guid>
      <description>環境描述 近期由於客戶需要導入 ArgoCD 管理 CRDs，因此在客戶的 Openshift 4.x 上安裝 GitOps Operator。安裝後發現了一個問題，ArgoCD 的 Web 介面需要約 24 小時後才會自動登出，客戶希望調整登出時間。
從上圖可得知，ArgoCD 的 web 會再登入後產生一把 token 並放到 cookie 內，名為 argocd.token，我們可以透過 jwt.io 解析這把 token，查看 expiration date:
在沒有做任何設定的情況下，透過 Openshift 帳密使用 SSO 登入機制進入 ArgoCD 畫面，所產生的 token 過期時間應該是 24h 後，這是因為 ArgoCD 在 SSO 認證上是交給 Dex Server 控制，而 Dex Server 的預設過期時間是 24h：
可以從 ArgoCD 的 Security 文章查看 Dex Server 的說明:
尋找方法 ArgoCD Operator 會透過 Kind: ArgoCD 的 CRD ，名為 openshift-gitops，產生需要的 components，如 server、applicationSet、grafana&amp;hellip;:</description>
    </item>
    
    <item>
      <title>RHEL Ansible Automation Platform (AAP) Installation</title>
      <link>https://tsunejui.github.io/posts/rhel-automation-platform-install/</link>
      <pubDate>Thu, 24 Aug 2023 10:24:53 +0800</pubDate>
      
      <guid>https://tsunejui.github.io/posts/rhel-automation-platform-install/</guid>
      <description>環境準備 Linux 的版本為 Red Hat Enterprise Linux 9.1 (Plow):
下載 tar 檔案 下載 Red Hat Ansible Automation Platform (v. 2.4 for RHEL 9 for x86_64): 至 https://access.redhat.com/downloads/content/480 下載 Ansible Automation Platform 2.4 Setup Bundle
解壓縮 tar xvzf ansible-automation-platform-setup-&amp;lt;latest-version&amp;gt;.tar.gz 安裝 Red Hat Ansible Automation Platform subscription 取得token 至 https://access.redhat.com/management/api 產生 Token
在 Redhat 上使用 subscription-manager register 註冊機器 你也可以透過 subscription-manager register --username &amp;lt;username&amp;gt; --password &amp;lt;password&amp;gt; --auto-attach 註冊機器
subscription-manager register --token &amp;lt;token&amp;gt; --insecure 獲得 Subscription 的 pool_id subscription-manager list --available --all | grep &amp;#34;Ansible Automation Platform&amp;#34; -B 3 -A 6 安裝 Subscription subscription-manager attach --pool=2c94e43f88fcee5b0189010269427636 驗證是否成功 subscription-manager list --consumed 建立 Ansible Automation Platform Database 如果需要自建 AAP 的 Database 則需執行此步驟，不需要請略過。</description>
    </item>
    
    <item>
      <title>AWX Installation (Container)</title>
      <link>https://tsunejui.github.io/posts/awx-install/</link>
      <pubDate>Mon, 17 Jul 2023 13:36:31 +0800</pubDate>
      
      <guid>https://tsunejui.github.io/posts/awx-install/</guid>
      <description>利用 dokcer 安裝 AWX
使用環境 Rocky Linux 8.7
安裝步驟 關閉 SELinux 建議暫時關閉 SELinux 避免安裝中出錯:
setenforce 0 安裝 docker https://docs.docker.com/engine/install/centos/
安裝 yum-utils:
yum install -y yum-utils 加入 repository:
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 安裝 docker
yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 啟動 docker
systemctl start docker 下載 AWX 17.1.0 安裝 git:
dnf install -y git Starting in version 18.0, the AWX Operator is the preferred way to install AWX.
https://github.com/ansible/awx/blob/devel/INSTALL.md
git clone -b 17.</description>
    </item>
    
  </channel>
</rss>
